#!/usr/bin/env bash

set -euo pipefail

# Determine the platform and architecture dynamically
platform="$(uname)"
case "${platform}" in
"Linux") platform="Linux" ;;
"Darwin") platform="Darwin" ;;
*) fail "Unsupported platform: ${platform}" ;;
esac

architecture="$(uname -m)"
case "${architecture}" in
"x86_64") architecture="x86_64" ;;
"arm64" | "aarch64") architecture="arm64" ;;
"i386") architecture="i386" ;;
*) fail "Unsupported architecture: ${architecture}" ;;
esac

current_script_path=${BASH_SOURCE[0]}
plugin_dir=$(dirname "$(dirname "$current_script_path")")

# shellcheck source=./lib/utils.bash
source "${plugin_dir}/lib/utils.bash"

mkdir -p "$ASDF_DOWNLOAD_PATH"

# Set the release file based on the dynamic platform, architecture, and version.
release_file="overmind_cli_${ASDF_INSTALL_VERSION}_${platform}_${architecture}.tar.gz"
download_path="$ASDF_DOWNLOAD_PATH/$release_file"

# Download tar.gz file to the download directory
download_release "$ASDF_INSTALL_VERSION" "$release_file" "$download_path"

# Extract contents of tar.gz file into the download directory
tar -xzf "$download_path" -C "$ASDF_DOWNLOAD_PATH" || fail "Could not extract $download_path"

# Remove the tar.gz file since we don't need to keep it
rm "$download_path"